C51 COMPILER V9.60.7.0   HC08                                                              07/03/2024 20:50:58 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE HC08
OBJECT MODULE PLACED IN .\Objects\hc08.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE hc08.c LARGE WARNINGLEVEL(1) OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\hc08.lst) TABS(2) OBJECT(.\Objects\hc08.obj)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          #include <string.h>
   4          #include "hc08.h"
   5          #include "delay.h"
   6          #include "oled.h"
   7          #include "ds1302.h"
   8          #include "alarm.h"
   9          #include "mp3.h"
  10          #include "weather.h"
  11          #include "event.h"
  12          
  13          uchar receive_data, flag=0, index=0;
  14          //uchar send_buffer[36] = "广州汇承信息科技有限公司www.hc01.com";
  15          uchar rcv_buffer[20];
  16          
  17          void switch_hour_type();
  18          
  19          void set_date_via_bt(){
  20   1        if(receive_data!='&'){
  21   2          if(receive_data=='?'){
  22   3            write_date(char_to_quadruple_digit(rcv_buffer[0],rcv_buffer[1],rcv_buffer[2],rcv_buffer[3]), char_to_do
             -uble_digit(rcv_buffer[4],rcv_buffer[5]), char_to_double_digit(rcv_buffer[6],rcv_buffer[7]));
  23   3            flag = 0;
  24   3            index = 0;
  25   3            return;
  26   3          }
  27   2          else rcv_buffer[index-1] = receive_data;
  28   2        }
  29   1        index++;
  30   1      }
  31          
  32          void set_time_via_bt(){
  33   1        if(receive_data!='@'){
  34   2          if(receive_data=='?'){
  35   3            write_time(char_to_double_digit(rcv_buffer[0],rcv_buffer[1]), char_to_double_digit(rcv_buffer[2],rcv_bu
             -ffer[3]), get_integer_second());
  36   3            flag = 0;
  37   3            index = 0;
  38   3            return;
  39   3          }
  40   2          else rcv_buffer[index-1] = receive_data;
  41   2        }
  42   1        index++;
  43   1      }
  44          
  45          void sync_time_via_bt(){
  46   1        if(receive_data!='$'){
  47   2          if(receive_data=='?'){
  48   3            write_date(char_to_quadruple_digit(rcv_buffer[0],rcv_buffer[1],rcv_buffer[2],rcv_buffer[3]), char_to_do
             -uble_digit(rcv_buffer[4],rcv_buffer[5]), char_to_double_digit(rcv_buffer[6],rcv_buffer[7]));
  49   3            write_time(char_to_double_digit(rcv_buffer[8],rcv_buffer[9]), char_to_double_digit(rcv_buffer[10],rcv_b
             -uffer[11]), char_to_double_digit(rcv_buffer[12],rcv_buffer[13]));
  50   3            flag = 0;
C51 COMPILER V9.60.7.0   HC08                                                              07/03/2024 20:50:58 PAGE 2   

  51   3            index = 0;
  52   3            return;
  53   3          }
  54   2          else rcv_buffer[index-1] = receive_data;
  55   2        }
  56   1        index++;
  57   1      }
  58          
  59          void set_alarm_via_bt(){
  60   1        if(receive_data!='%'){
  61   2          if(receive_data=='?'){
  62   3            set_alarm(char_to_double_digit(rcv_buffer[0],rcv_buffer[1]), char_to_double_digit(rcv_buffer[2],rcv_buf
             -fer[3]), Tinyint(rcv_buffer[4]), Tinyint(rcv_buffer[5]));
  63   3            flag = 0;
  64   3            index = 0;
  65   3            return;
  66   3          }
  67   2          else rcv_buffer[index-1] = receive_data;
  68   2        }
  69   1        index++;
  70   1      }
  71          
  72          void set_volume_via_bt(){
  73   1        if(receive_data!='#'){
  74   2          if(receive_data=='?'){
  75   3            set_volume(5*Tinyint(rcv_buffer[0]));
  76   3            flag = 0;
  77   3            index = 0;
  78   3            return;
  79   3          }
  80   2          else rcv_buffer[index-1] = receive_data;
  81   2        }
  82   1        index++;
  83   1      }
  84          
  85          void rcv_weather_all_via_bt(){
  86   1        static uchar step=0;
  87   1        char weather_str[13];
  88   1        if(receive_data!='^'){
  89   2          if(receive_data=='?'){
  90   3            strncpy(weather_str, rcv_buffer, 12);
  91   3            weather_str[12] = 0;
  92   3            set_weather_from_str(step, weather_str);
  93   3            flag = 0;
  94   3            index = 0;
  95   3            step = 0;
  96   3            return;
  97   3          }
  98   2          else if(receive_data=='.'){
  99   3            strncpy(weather_str, rcv_buffer, 12);
 100   3            weather_str[12] = 0;
 101   3            set_weather_from_str(step, weather_str);
 102   3            flag = 0;
 103   3            index = 0;
 104   3            step++;
 105   3            sendData("WeatherReady");
 106   3            return;
 107   3          }
 108   2          else rcv_buffer[index-1] = receive_data;
 109   2        }
 110   1        index++;
 111   1      }
C51 COMPILER V9.60.7.0   HC08                                                              07/03/2024 20:50:58 PAGE 3   

 112          
 113          void set_event_via_bt(){
 114   1        if(receive_data!='`'){
 115   2          if(receive_data=='}'){
 116   3            rcv_buffer[index-1] = 0;
 117   3            set_event_content(rcv_buffer);
 118   3            flag = 0;
 119   3            index = 0;
 120   3            return;
 121   3          }
 122   2          else if(receive_data=='{'){
 123   3            set_event_control(char_to_quadruple_digit(rcv_buffer[0],rcv_buffer[1],rcv_buffer[2],rcv_buffer[3]), cha
             -r_to_double_digit(rcv_buffer[4],rcv_buffer[5]), char_to_double_digit(rcv_buffer[6],rcv_buffer[7]), Tinyint(rcv_buffer[8]
             -));
 124   3            flag = 0;
 125   3            index = 0;
 126   3            sendData("EventReady");
 127   3            return;
 128   3          }
 129   2          else rcv_buffer[index-1] = receive_data;
 130   2        }
 131   1        index++;
 132   1      }
 133          
 134          /********************************************************************
 135          * 名称 : Com_Int()
 136          * 功能 : 串口中断子函数
 137          * 输入 : 无 * 输出 : 无
 138          ***********************************************************************/
 139          void Com_Int(void) interrupt 4 {
 140   1        uchar i;
 141   1      //  uchar receive_data;
 142   1      
 143   1        EA = 0;
 144   1        if(RI == 1){//当硬件接收到一个数据时，RI会置位
 145   2          RI = 0;
 146   2          LED = 0;
 147   2          receive_data = SBUF;//接收到的数据
 148   2          if(flag == 0){
 149   3            flag = receive_data;
 150   3            index = 0;
 151   3            strcpy(rcv_buffer, "");
 152   3          }
 153   2          switch(flag){
 154   3            case 0x2A:{
 155   4              switch_hour_type();
 156   4              flag=0;
 157   4              index=0;
 158   4              break;
 159   4            }
 160   3            case '&':{
 161   4              set_date_via_bt();
 162   4              break;
 163   4            }
 164   3            case '@':{
 165   4              set_time_via_bt();
 166   4              break;
 167   4            }
 168   3            case '$':{
 169   4              sync_time_via_bt();
 170   4              break;
 171   4            }
C51 COMPILER V9.60.7.0   HC08                                                              07/03/2024 20:50:58 PAGE 4   

 172   3            case '%':{
 173   4              set_alarm_via_bt();
 174   4              break;
 175   4            }
 176   3            case '#':{
 177   4              set_volume_via_bt();
 178   4              break;
 179   4            }
 180   3            case '^':{
 181   4              rcv_weather_all_via_bt();
 182   4              break;
 183   4            }
 184   3            case '`':{
 185   4              set_event_via_bt();
 186   4              break;
 187   4            }
 188   3            default:{
 189   4              break;
 190   4            }
 191   3          }
 192   2          LED = 1;
 193   2        }
 194   1      //    for(i=0; i<36; i++)
 195   1      //    {
 196   1      //      SBUF = send_buffer[i];   //将要发送的数据放入到发送寄存器
 197   1      //      while(!TI);       //等待发送数据完成
 198   1      //      TI=0;             //清除发送完成标志位
 199   1      //      delay_ms(1);
 200   1      //    }
 201   1        EA = 1;
 202   1      }
 203          
 204          void sendData(uchar *datas)
 205          { uchar i=0;
 206   1        while(datas[i]!='\0')
 207   1          { SBUF=datas[i];      //???????????????
 208   2            while(!TI);       //????????
 209   2            TI=0;
 210   2          i++;}       //?????????
 211   1      }
 212          
 213          /*******************************************************************************
 214          * 函 数 名       : UsartConfiguration()
 215          * 函数功能       : 设置串口
 216          * 输    入       : 无
 217          * 输    出       : 无
 218          *******************************************************************************/
 219          
 220          void UsartConfiguration()
 221          { 
 222   1        SCON=0X50;      //设置为工作方式1,8位数据，可变波特率
 223   1        TMOD=0X20;      //设置计数器工作方式2
 224   1        PCON=0X00;      //波特率不加倍
 225   1        TH1=0XFd;       //计数器初始值设置，9600@11.0592MHz
 226   1        TL1=0XFd;
 227   1        TR1=1;          //打开计数器
 228   1        ES = 1;         //开串口中断
 229   1        EA = 1;         //开总中断
 230   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.7.0   HC08                                                              07/03/2024 20:50:58 PAGE 5   

   CODE SIZE        =    915    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =     24      17
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
