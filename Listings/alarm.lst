C51 COMPILER V9.60.7.0   ALARM                                                             07/04/2024 19:58:39 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE ALARM
OBJECT MODULE PLACED IN .\Objects\alarm.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE alarm.c LARGE WARNINGLEVEL(1) OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\alarm.lst) TABS(2) OBJECT(.\Objects\alarm.obj)

line level    source

   1          #include "alarm.h"
   2          #include "oled.h"
   3          #include "ds1302.h"
   4          #include "keyscan.h"
   5          #include "delay.h"
   6          #include "mp3.h"
   7          #include "bmp.h"
   8          
   9          uchar alarm_suspend = 0;
  10          Alarm alarm;
  11          
  12          void alarm_init(){
  13   1        alarm.hour = get_integer_hour();
  14   1        alarm.minute = get_integer_minute();
  15   1        alarm.ringtone = 1;
  16   1        alarm.status = 0;
  17   1        alarm_suspend = 0;
  18   1      }
  19          
  20          char adjust_12(char month_num){
  21   1        if(month_num > 12) month_num = 1;
  22   1        return month_num;
  23   1      }
  24          
  25          char adjust_30(uint year_num, char month_num, char day_num, uchar keep_max){
  26   1        if(month_num == 2){
  27   2          if(isLeapYear(year_num)){
  28   3            if(day_num > 29) day_num = keep_max? 29:1;
  29   3          }
  30   2          else {
  31   3            if(day_num > 28) day_num = keep_max? 28:1;
  32   3          }
  33   2        }
  34   1        else if(month_num == 4 || month_num == 6 || month_num == 9 || month_num == 11){
  35   2          if(day_num > 30) day_num = keep_max? 30:1;
  36   2        }
  37   1        else{
  38   2          if(day_num > 31) day_num = keep_max? 31:1;
  39   2        }
  40   1        return day_num;
  41   1      }
  42          
  43          char adjust_24(char hour_num){
  44   1        if(hour_num >= 24) hour_num = 0;
  45   1        return hour_num;
  46   1      }
  47          
  48          char adjust_60(char minute_num){
  49   1        if(minute_num >= 60) minute_num = 0;
  50   1        return minute_num;
  51   1      }
  52          
  53          void set_alarm(char hour, char minute, char music, uchar status){
  54   1        alarm.hour = hour;
C51 COMPILER V9.60.7.0   ALARM                                                             07/04/2024 19:58:39 PAGE 2   

  55   1        alarm.minute = minute;
  56   1        alarm.ringtone = music;
  57   1        alarm.status = status;
  58   1        alarm_suspend = 0;
  59   1      }
  60          
  61          void page_alarm(){
  62   1        char title_chinese[] = {0,1,19,36}, ringtone_chinese[] = {17,96}, repeat_chinese[] = {97,98}, saved_chine
             -se[] = {0,1,13,14,15};
  63   1        char disabled_chinese[] = {105,33,9}, once_chinese[] = {99,16,77,100}, everyday_chinese[] = {101,4}, work
             -day_chinese[] = {103,77,102,103,104};
  64   1      //  char title[] = "Alarm1";
  65   1        char alarm_hour[3] = "00";
  66   1        char alarm_minute[3] = "00";
  67   1        char alarm_music[] = "Music ";
  68   1        uchar step = 1;
  69   1        Alarm alarm_original;
  70   1        OLED_Clear();
  71   1        alarm_original = alarm;
  72   1        double_digit_to_string(alarm.hour, alarm_hour);
  73   1        double_digit_to_string(alarm.minute, alarm_minute);
  74   1        alarm_music[5] = Char(alarm.ringtone);
  75   1        OLED_ShowChineseString(32,0,0,title_chinese,4);
  76   1      //  OLED_ShowString(32,0,title,16);
  77   1        OLED_ShowChar(60,2,':',16);
  78   1        OLED_ShowChineseString(0,4,0,ringtone_chinese,2);
  79   1        OLED_ShowChar(36,4,'|',16);
  80   1        OLED_ShowChineseString(0,6,0,repeat_chinese,2);
  81   1        OLED_ShowChar(36,6,'|',16);
  82   1        while(1){
  83   2          if(step == 1) OLED_ShowString_Reverse(44,2,alarm_hour,16);
  84   2          else OLED_ShowString(44,2,alarm_hour,16);
  85   2          if(step == 2) OLED_ShowString_Reverse(68,2,alarm_minute,16);
  86   2          else OLED_ShowString(68,2,alarm_minute,16);
  87   2          if(step == 3) OLED_ShowString_Reverse(64,4,alarm_music,16);
  88   2          else OLED_ShowString(64,4,alarm_music,16);
  89   2          if(step == 4){
  90   3            if(alarm.status == 0) OLED_ShowChineseString_Reverse(64,6,0,disabled_chinese,3);
  91   3            else if(alarm.status == 1) OLED_ShowChineseString_Reverse(56,6,0,once_chinese,4);
  92   3            else if(alarm.status == 2) OLED_ShowChineseString_Reverse(72,6,0,everyday_chinese,2);
  93   3            else if(alarm.status == 3) OLED_ShowChineseString_Reverse(48,6,0,workday_chinese,5);
  94   3          }
  95   2          else{
  96   3            if(alarm.status == 0) OLED_ShowChineseString(64,6,0,disabled_chinese,3);
  97   3            else if(alarm.status == 1) OLED_ShowChineseString(56,6,0,once_chinese,4);
  98   3            else if(alarm.status == 2) OLED_ShowChineseString(72,6,0,everyday_chinese,2);
  99   3            else if(alarm.status == 3) OLED_ShowChineseString(48,6,0,workday_chinese,5);
 100   3          }
 101   2          if(getKey() == 1){
 102   3            switch(step){
 103   4              case 1: {
 104   5                alarm.hour++;
 105   5                alarm.hour = adjust_24(alarm.hour);
 106   5                double_digit_to_string(alarm.hour, alarm_hour);
 107   5                break;
 108   5              }
 109   4              case 2: {
 110   5                alarm.minute++;
 111   5                alarm.minute = adjust_60(alarm.minute);
 112   5                double_digit_to_string(alarm.minute, alarm_minute);
 113   5                break;
 114   5              }
C51 COMPILER V9.60.7.0   ALARM                                                             07/04/2024 19:58:39 PAGE 3   

 115   4              case 3: {
 116   5                alarm.ringtone++;
 117   5                if(alarm.ringtone >= 10) alarm.ringtone = 1;
 118   5                alarm_music[5] = Char(alarm.ringtone);
 119   5                break;
 120   5              }
 121   4              case 4: {
 122   5                alarm.status++;
 123   5                if(alarm.status > 3) alarm.status = 0;
 124   5                OLED_ShowString(48,6,"          ",16);
 125   5                break;
 126   5              }
 127   4              default: break;
 128   4            }
 129   3          }
 130   2          else if(getKey() == 2){
 131   3            step++;
 132   3            if(step > 4) step = 1;
 133   3          }
 134   2          else if(getKey() == 3){
 135   3            OLED_Clear();
 136   3            alarm = alarm_original;
 137   3            break;
 138   3          }
 139   2          else if(getKey() == 4){
 140   3            OLED_Clear();
 141   3            alarm_suspend = 0;
 142   3            OLED_DrawBMP(0, 0, 128, 4, success_icon);
 143   3            OLED_ShowChineseString(24,4,0,saved_chinese,5);
 144   3      //      OLED_ShowString(32,2,"Saved!",16);
 145   3            delay_ms(2000);
 146   3            OLED_Clear();
 147   3            break;
 148   3          }
 149   2        }
 150   1      }
 151          
 152          void alarm_tick_tock(){
 153   1        if(!alarm.status) return;
 154   1        else if(alarm.status == 3 && get_integer_weekday() > 5) return;
 155   1        if(get_integer_hour() == alarm.hour && get_integer_minute() == alarm.minute){
 156   2          if(!alarm_suspend) page_ring();
 157   2        }
 158   1        else{
 159   2          if(alarm_suspend) alarm_suspend = 0;
 160   2        }
 161   1      }
 162          
 163          void page_ring(){
 164   1        uchar alarm_going_off_chinese[] = {0,1,16,17,18}, press_key_cancel_chinese[] = {58,59,60,61,62,63};
 165   1        OLED_Clear();
 166   1        send_volume(1);
 167   1        OLED_DrawBMP(0, 0, 128, 4, alarm_icon);
 168   1        OLED_ShowChineseString(24,4,0,alarm_going_off_chinese,5);
 169   1        OLED_ShowChineseString(16,6,0,press_key_cancel_chinese,6);
 170   1      //  OLED_ShowString(0,2,"Alarm going off",16);
 171   1        set_single_loop(1);
 172   1        playmusic(alarm.ringtone);
 173   1        while(1){
 174   2          if(getKey() || get_integer_minute() == alarm.minute + 3){
 175   3            stopmusic();
 176   3            set_single_loop(0);
C51 COMPILER V9.60.7.0   ALARM                                                             07/04/2024 19:58:39 PAGE 4   

 177   3            alarm_suspend = 1;
 178   3            if(alarm.status == 1){
 179   4              alarm.status = 0;
 180   4              alarm_suspend = 0;
 181   4            }
 182   3            OLED_Clear();
 183   3            break;
 184   3          }
 185   2        }
 186   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1434    ----
   CONSTANT SIZE    =     62    ----
   XDATA SIZE       =      5      65
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
