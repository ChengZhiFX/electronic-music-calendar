C51 COMPILER V9.60.7.0   SETTINGS                                                          06/10/2024 16:13:32 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SETTINGS
OBJECT MODULE PLACED IN .\Objects\settings.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE settings.c LARGE WARNINGLEVEL(1) OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXT
                    -END PRINT(.\Listings\settings.lst) TABS(2) OBJECT(.\Objects\settings.obj)

line level    source

   1          #include "ds1302.h"
   2          #include "settings.h"
   3          #include "mp3.h"
   4          #include "alarm.h"
   5          #include "keyscan.h"
   6          #include "delay.h"
   7          #include "oled.h"
   8          
   9          extern uchar time_buf[8];
  10          extern uchar smog_alarm_enable;
  11          
  12          void page_set_date_and_time(){
  13   1        char year_to_show[5] = "1970";
  14   1        char month_to_show[3] = "01";
  15   1        char day_to_show[3] = "01";
  16   1        char hour_to_show[3] = "00";
  17   1        char minute_to_show[3] = "00";
  18   1        char second_to_show[3] = "00";
  19   1        uint year = get_integer_year();
  20   1        uchar month = get_integer_month(), day = get_integer_day(), weekday = get_integer_weekday();
  21   1        uchar hour = get_integer_hour(), minute = get_integer_minute(), second = get_integer_second(), step = 1;
  22   1        OLED_Clear();
  23   1        quadruple_digit_to_string(year, year_to_show);
  24   1        double_digit_to_string(month, month_to_show);
  25   1        double_digit_to_string(day, day_to_show);
  26   1        double_digit_to_string(hour, hour_to_show);
  27   1        double_digit_to_string(minute, minute_to_show);
  28   1        double_digit_to_string(second, second_to_show);
  29   1        OLED_ShowString(8,0,"Set Date&Time",16);
  30   1        while(1){
  31   2          OLED_ShowChar(104,2,Char(weekday),16);
  32   2          if(step == 1) OLED_ShowString_Reverse(16,2,year_to_show,16);
  33   2          else OLED_ShowString(16,2,year_to_show,16);
  34   2          OLED_ShowChar(48,2,'/',16);
  35   2          if(step == 2) OLED_ShowString_Reverse(56,2,month_to_show,16);
  36   2          else OLED_ShowString(56,2,month_to_show,16);
  37   2          OLED_ShowChar(72,2,'/',16);
  38   2          if(step == 3) OLED_ShowString_Reverse(80,2,day_to_show,16);
  39   2          else OLED_ShowString(80,2,day_to_show,16);
  40   2          if(step == 4) OLED_ShowString_Reverse(32,4,hour_to_show,16);
  41   2          else OLED_ShowString(32,4,hour_to_show,16);
  42   2          OLED_ShowChar(48,4,':',16);
  43   2          if(step == 5) OLED_ShowString_Reverse(56,4,minute_to_show,16);
  44   2          else OLED_ShowString(56,4,minute_to_show,16);
  45   2          OLED_ShowChar(72,4,':',16);
  46   2          if(step == 6) OLED_ShowString_Reverse(80,4,second_to_show,16);
  47   2          else OLED_ShowString(80,4,second_to_show,16);
  48   2          if(getKey() == 1){
  49   3            switch(step){
  50   4              case 1: {
  51   5                year++;
  52   5                if(year >= 10000) year = 0;
  53   5                quadruple_digit_to_string(year, year_to_show);
  54   5                day = adjust_30(year, month, day);
C51 COMPILER V9.60.7.0   SETTINGS                                                          06/10/2024 16:13:32 PAGE 2   

  55   5                double_digit_to_string(day, day_to_show);
  56   5                weekday = calculate_week_day(year, month, day);
  57   5                break;
  58   5              }
  59   4              case 2: {
  60   5                month++;
  61   5                month = adjust_12(month);
  62   5                double_digit_to_string(month, month_to_show);
  63   5                day = adjust_30(year, month, day);
  64   5                double_digit_to_string(day, day_to_show);
  65   5                weekday = calculate_week_day(year, month, day);
  66   5                break;
  67   5              }
  68   4              case 3: {
  69   5                day++;
  70   5                day = adjust_30(year, month, day);
  71   5                double_digit_to_string(day, day_to_show);
  72   5                weekday = calculate_week_day(year, month, day);
  73   5                break;
  74   5              }
  75   4              case 4: {
  76   5                hour++;
  77   5                hour = adjust_24(hour);
  78   5                double_digit_to_string(hour, hour_to_show);
  79   5                break;
  80   5              }
  81   4              case 5: {
  82   5                minute++;
  83   5                minute = adjust_60(minute);
  84   5                double_digit_to_string(minute, minute_to_show);
  85   5                break;
  86   5              }
  87   4              case 6: {
  88   5                second++;
  89   5                second = adjust_60(second);
  90   5                double_digit_to_string(second, second_to_show);
  91   5                break;
  92   5              }
  93   4              default: break;
  94   4            }
  95   3          }
  96   2          else if(getKey() == 2){
  97   3            step++;
  98   3            if(step > 6) step = 1;
  99   3          }
 100   2          else if(getKey() == 3){
 101   3            OLED_Clear();
 102   3            break;
 103   3          }
 104   2          else if(getKey() == 4){
 105   3            OLED_Clear();
 106   3            write_date_and_time(year, month, day, hour, minute, second);
 107   3            OLED_ShowString(32,2,"Saved!",16);
 108   3            delay_ms(2000);
 109   3            OLED_Clear();
 110   3            break;
 111   3          }
 112   2        }
 113   1      }
 114          
 115          void page_set_notification(){
 116   1        char vol_to_show[] = "Volume:  ";
C51 COMPILER V9.60.7.0   SETTINGS                                                          06/10/2024 16:13:32 PAGE 3   

 117   1        vol_to_show[8] = (char)(get_volume() / 5 + '0');
 118   1        OLED_Clear();
 119   1        OLED_ShowString(16,0,"Notification",16);
 120   1        
 121   1        while(1){
 122   2          OLED_ShowString(20,2,vol_to_show,16);
 123   2          if(smog_alarm_enable) OLED_ShowString(32,6,"Enabled",16);
 124   2          else OLED_ShowString(32,6,"Disable",16);
 125   2          if(getKey() == 1){
 126   3            stopmusic();
 127   3            set_volume(get_volume()+5);
 128   3            vol_to_show[8] = (char)(get_volume() / 5 + '0');
 129   3            playmusic(10);
 130   3          }
 131   2          else if(getKey() == 2){
 132   3            stopmusic();
 133   3            set_volume(get_volume()-5);
 134   3            vol_to_show[8] = (char)(get_volume() / 5 + '0');
 135   3            playmusic(10);
 136   3          }
 137   2          else if(getKey() == 3){
 138   3            OLED_Clear();
 139   3            break;
 140   3          }
 141   2          else if(getKey() == 4){
 142   3            if(smog_alarm_enable) smog_alarm_enable = 0;
 143   3            else smog_alarm_enable = 1;
 144   3          }
 145   2        }
 146   1      }
 147          
 148          void page_set_display(){
 149   1        
 150   1      }
 151          
 152          void page_about(){
 153   1        OLED_Clear();
 154   1        while(1){
 155   2          OLED_ShowString(16,0,"Copyright(C)",16);
 156   2          OLED_ShowString(8,2,"Zhang Jiacheng",16);
 157   2          OLED_ShowString(16,4,"202200120145",16);
 158   2          OLED_ShowString(0,6,"Chongxin College",16);
 159   2          if(getKey()){
 160   3            OLED_Clear();
 161   3            break;
 162   3          }
 163   2        }
 164   1      }
 165          
 166          void page_settings(){
 167   1        uchar selection = 0;
 168   1        OLED_Clear();
 169   1        while(1){
 170   2          OLED_ShowString(24,0,"Date&Time",16);
 171   2          OLED_ShowString(24,2,"Notification",16);
 172   2          OLED_ShowString(24,4,"Display",16);
 173   2          OLED_ShowString(24,6,"About",16);
 174   2          OLED_ShowChar(16,selection*2,'>',16);
 175   2          if(getKey() == 1){
 176   3            OLED_ShowChar(16,selection*2,' ',16);
 177   3            if(selection == 0) selection = 3;
 178   3            else selection -= 1;
C51 COMPILER V9.60.7.0   SETTINGS                                                          06/10/2024 16:13:32 PAGE 4   

 179   3          }
 180   2          else if(getKey() == 2){
 181   3            OLED_ShowChar(16,selection*2,' ',16);
 182   3            if(selection == 3) selection = 0;
 183   3            else selection += 1;
 184   3          }
 185   2          else if(getKey() == 3){
 186   3            OLED_Clear();
 187   3            break;
 188   3          }
 189   2          else if(getKey() == 4){
 190   3            switch(selection){
 191   4              case 0: {page_set_date_and_time(); break;}
 192   4              case 1: {page_set_notification(); break;}
 193   4              case 2: {page_set_display(); break;}
 194   4              case 3: {page_about(); break;}
 195   4              default: break;
 196   4            }
 197   3          }
 198   2        }
 199   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1380    ----
   CONSTANT SIZE    =    162    ----
   XDATA SIZE       =   ----      40
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
