C51 COMPILER V9.60.7.0   MAIN                                                              07/03/2024 20:50:57 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE WARNINGLEVEL(1) OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          #include "oled.h"
   3          #include "bmp.h"
   4          #include "dht11.h"
   5          #include "ds1302.h"
   6          #include "keyscan.h"
   7          #include "mp3.h"
   8          #include "alarm.h"
   9          #include "settings.h"
  10          #include "delay.h"
  11          #include "lunar.h"
  12          #include "mq2.h"
  13          #include "hc08.h"
  14          #include "weather.h"
  15          #include "event.h"
  16          
  17          extern Alarm alarm;
  18          static uchar event_chinese[] = {69,70,29,30}, music_chinese[] = {2,3,66,67,68}, weather_chinese[] = {4,5},
             - calendar_chinese[] = {6,7,8};
  19          uchar hour_type = 24;
  20          
  21          void switch_hour_type(){
  22   1        if(hour_type == 12) hour_type = 24;
  23   1        else if(hour_type == 24) hour_type = 12;
  24   1      }
  25          
  26          void page_calendar(){
  27   1        Date date;
  28   1        date.year = get_integer_year();
  29   1        date.month = get_integer_month();
  30   1        date.day = get_integer_day();
  31   1        OLED_Clear();
  32   1        OLED_ShowChineseString(40,0,0,calendar_chinese,3);
  33   1        while(1){
  34   2          print_date_any_time(0, 2, date.year, date.month, date.day);
  35   2          print_lunar_and_term_any_time(12,4, date.year, date.month, date.day);
  36   2          if(getKey() == 1) date = date_addition_adjust(date.year, date.month, date.day + 1);
  37   2          else if(getKey() == 2) date = date_subtraction_adjust(date.year, date.month, date.day - 1);
  38   2          else if(getKey() == 3 || getKey() == 4){
  39   3            OLED_Clear();
  40   3            break;
  41   3          }
  42   2        }
  43   1      }
  44          
  45          void page_function_menu(){
  46   1        uchar selection = 0;
  47   1        OLED_Clear();
  48   1        while(1){
  49   2          OLED_ShowChineseString(24,0,0,music_chinese,5);
  50   2          OLED_ShowChineseString(40,2,0,calendar_chinese,3);
  51   2          OLED_ShowChineseString(48,4,0,weather_chinese,2);
  52   2          OLED_ShowChineseString(32,6,0,event_chinese,4);
  53   2      //    OLED_ShowString(24,0,"Alarm",16);
C51 COMPILER V9.60.7.0   MAIN                                                              07/03/2024 20:50:57 PAGE 2   

  54   2      //    OLED_ShowString(24,2,"Music",16);
  55   2      //    OLED_ShowString(24,4,"Weather",16);
  56   2      //    OLED_ShowString(24,6,"Calendar",16);
  57   2          OLED_ShowChar(16,selection*2,'>',16);
  58   2          if(getKey() == 1){
  59   3            OLED_ShowChar(16,selection*2,' ',16);
  60   3            if(selection == 0) selection = 3;
  61   3            else selection -= 1;
  62   3          }
  63   2          else if(getKey() == 2){
  64   3            OLED_ShowChar(16,selection*2,' ',16);
  65   3            if(selection == 3) selection = 0;
  66   3            else selection += 1;
  67   3          }
  68   2          else if(getKey() == 3){
  69   3            OLED_Clear();
  70   3            break;
  71   3          }
  72   2          else if(getKey() == 4){
  73   3            switch(selection){
  74   4              case 0: {page_music(); break;}
  75   4              case 1: {page_calendar(); break;}
  76   4              case 2: {page_weather_all(); break;}
  77   4              case 3: {page_event_view(); break;}
  78   4              default: break;
  79   4            }
  80   3          }
  81   2        }
  82   1      }
  83          
  84          /*******************************Main*******************************/
  85          void main(){
  86   1        uchar index = 1;
  87   1        Delay_50ms(1);//等待系统稳定
  88   1        ds1302_init();  //DS1302初始化
  89   1        UsartConfiguration();
  90   1        OLED_Init();
  91   1        OLED_Display_On();
  92   1        OLED_Clear();
  93   1        OLED_DrawBMP(0, 0, 128, 8, start_up);
  94   1        Delay_50ms(25);
  95   1        OLED_Clear();
  96   1        alarm_init();
  97   1        weather_init();
  98   1        event_init();
  99   1        while(1){
 100   2          print_time_now(0,3,hour_type);
 101   2          print_date_now(0,1);
 102   2          if(index){print_temp_and_hum(44, 0); index = 0;}
 103   2          else{mq2_tick_tock(); index = 1;}
 104   2          event_tick_tock(0,6);
 105   2          alarm_tick_tock();
 106   2          switch(getKey()){
 107   3            case 1: {switch_hour_type(); break;}
 108   3            case 2: {page_alarm(); break;}
 109   3            case 3: {page_function_menu(); break;}
 110   3            case 4: {page_settings(); break;}
 111   3            default: break;
 112   3          }
 113   2        }
 114   1      }

C51 COMPILER V9.60.7.0   MAIN                                                              07/03/2024 20:50:57 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    629    ----
   CONSTANT SIZE    =   1024    ----
   XDATA SIZE       =     15       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
