C51 COMPILER V9.60.7.0   MP3                                                               07/03/2024 17:34:44 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MP3
OBJECT MODULE PLACED IN .\Objects\mp3.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE mp3.c LARGE WARNINGLEVEL(1) OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\mp3.lst) TABS(2) OBJECT(.\Objects\mp3.obj)

line level    source

   1          #include "mp3.h"
   2          #include "oled.h"
   3          #include "keyscan.h"
   4          #include "delay.h"
   5          #include "ds1302.h"
   6          
   7          char vol = 15;
   8          
   9          void Send ( uchar addr )//发送函数。
  10          {
  11   1          uchar i;
  12   1      
  13   1          EA = 0;/*发送时关掉中断，防止中断影响时序  */
  14   1      
  15   1          sda = 1;/*开始拉高  */
  16   1          delay_us ( 1000 );
  17   1          sda = 0;/*开始引导码*/
  18   1          delay_us ( 2200 );/*此处延时最少要大于2ms，此参数延时为310ms  */
  19   1      
  20   1          for ( i = 0; i < 8; i++ ) /*总共8位数据  */
  21   1          {
  22   2              sda = 1;
  23   2              if ( addr & 0x01 ) /*3:1表示数据位1,每个位用两个脉冲表示  */
  24   2              {
  25   3                  delay_us ( 500 );
  26   3                  sda = 0;
  27   3                  delay_us ( 210 );
  28   3              }
  29   2              else              /*1：3表示数据位0 ,每个位用两个脉冲表示  */
  30   2              {
  31   3                  delay_us ( 210 );
  32   3                  sda = 0;
  33   3                  delay_us ( 500 );
  34   3              }
  35   2              addr >>= 1;
  36   2          }
  37   1          sda = 1;
  38   1          EA = 1;//恢复中断
  39   1      }
  40          void playmusic(uchar num)
  41          { 
  42   1        uchar num_h,num_l;
  43   1        if(num >= 10){
  44   2          num_h = num / 10;
  45   2          num_l = num % 10;
  46   2          Send(0x0a);
  47   2          Send(num_h);
  48   2          Send(num_l);
  49   2          Send(0x0b);
  50   2        }
  51   1        else {
  52   2          Send(0x0a);
  53   2          Send(num);
  54   2          Send(0x0b);
C51 COMPILER V9.60.7.0   MP3                                                               07/03/2024 17:34:44 PAGE 2   

  55   2        }
  56   1      }
  57          
  58          void stopmusic(){
  59   1        Send(0x13);
  60   1      }
  61          
  62          void set_single_loop(uchar is_loop){
  63   1        if(is_loop){
  64   2          Send(0x0a);
  65   2          Send(0x01);
  66   2          Send(0x0e);
  67   2        }
  68   1        else{
  69   2          Send(0x0a);
  70   2          Send(0x02);
  71   2          Send(0x0e);
  72   2        }
  73   1      }
  74          
  75          char get_volume(){
  76   1        return vol;
  77   1      }
  78          
  79          void set_volume(char vol_temp){
  80   1        char vol_H, vol_L;
  81   1        if(vol_temp > 30) vol = 30;
  82   1        else if(vol_temp < 0) vol = 0;
  83   1        else vol = vol_temp;
  84   1        vol_H = vol / 10;
  85   1        vol_L = vol % 10;
  86   1        Send(0x0a);
  87   1        Send(vol_H);
  88   1        Send(vol_L);
  89   1        Send(0x0c);
  90   1      }
  91          
  92          void page_music(){
  93   1        uchar selection = 1;
  94   1        char title_chinese[] = {2,3,66,67,68}, vol_chinese[] = {2,10};
  95   1        char vol_init = vol, music_playing[] = "Music1", vol_to_show[] = ":  ";
  96   1        OLED_Clear();
  97   1        set_volume(vol);
  98   1        playmusic(1);
  99   1        while(1){
 100   2          OLED_ShowChineseString(24,0,0,title_chinese,5);
 101   2          OLED_ShowString(32,2,music_playing,16);
 102   2          vol_to_show[2] = Char(vol / 5);
 103   2          OLED_ShowChineseString(32,4,0,vol_chinese,2);
 104   2          OLED_ShowString(64,4,vol_to_show,16);
 105   2          if(getKey() == 1){
 106   3            set_volume(vol+5);
 107   3            vol_to_show[2] = Char(vol / 5);
 108   3          }
 109   2          else if(getKey() == 2){
 110   3            set_volume(vol-5);
 111   3            vol_to_show[2] = Char(vol / 5);
 112   3          }
 113   2          else if(getKey() == 3){
 114   3            stopmusic();
 115   3            vol = vol_init;
 116   3            OLED_Clear();
C51 COMPILER V9.60.7.0   MP3                                                               07/03/2024 17:34:44 PAGE 3   

 117   3            break;
 118   3          }
 119   2          else if(getKey() == 4){
 120   3            stopmusic();
 121   3            selection++;
 122   3            if(selection >= 10) selection = 1;
 123   3            music_playing[5] = Char(selection);
 124   3            playmusic(selection);
 125   3          }
 126   2        }
 127   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    606    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =      1      27
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
