C51 COMPILER V9.60.7.0   MP3                                                               07/04/2024 19:58:39 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MP3
OBJECT MODULE PLACED IN .\Objects\mp3.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE mp3.c LARGE WARNINGLEVEL(1) OPTIMIZE(9,SIZE) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\mp3.lst) TABS(2) OBJECT(.\Objects\mp3.obj)

line level    source

   1          #include "mp3.h"
   2          #include "oled.h"
   3          #include "keyscan.h"
   4          #include "delay.h"
   5          #include "ds1302.h"
   6          
   7          uchar mp3_enabled = 1;
   8          char vol_notification = 20, vol_media = 15, vol_alert = 30; //"vol" equals to "vol_notification"
   9          
  10          void Send ( uchar addr )//发送函数。
  11          {
  12   1          uchar i;
  13   1      
  14   1          EA = 0;/*发送时关掉中断，防止中断影响时序  */
  15   1      
  16   1          sda = 1;/*开始拉高  */
  17   1          delay_us ( 1000 );
  18   1          sda = 0;/*开始引导码*/
  19   1          delay_us ( 2200 );/*此处延时最少要大于2ms，此参数延时为310ms  */
  20   1      
  21   1          for ( i = 0; i < 8; i++ ) /*总共8位数据  */
  22   1          {
  23   2              sda = 1;
  24   2              if ( addr & 0x01 ) /*3:1表示数据位1,每个位用两个脉冲表示  */
  25   2              {
  26   3                  delay_us ( 500 );
  27   3                  sda = 0;
  28   3                  delay_us ( 210 );
  29   3              }
  30   2              else              /*1：3表示数据位0 ,每个位用两个脉冲表示  */
  31   2              {
  32   3                  delay_us ( 210 );
  33   3                  sda = 0;
  34   3                  delay_us ( 500 );
  35   3              }
  36   2              addr >>= 1;
  37   2          }
  38   1          sda = 1;
  39   1          EA = 1;//恢复中断
  40   1      }
  41          
  42          void playmusic(uchar num){
  43   1        uchar num_h,num_l;
  44   1        if(!mp3_enabled) return;
  45   1        if(num >= 10){
  46   2          num_h = num / 10;
  47   2          num_l = num % 10;
  48   2          Send(0x0a);
  49   2          Send(num_h);
  50   2          Send(num_l);
  51   2          Send(0x0b);
  52   2        }
  53   1        else {
  54   2          Send(0x0a);
C51 COMPILER V9.60.7.0   MP3                                                               07/04/2024 19:58:39 PAGE 2   

  55   2          Send(num);
  56   2          Send(0x0b);
  57   2        }
  58   1      }
  59          
  60          void stopmusic(){
  61   1        Send(0x13);
  62   1      }
  63          
  64          void set_single_loop(uchar is_loop){
  65   1        if(is_loop){
  66   2          Send(0x0a);
  67   2          Send(0x01);
  68   2          Send(0x0e);
  69   2        }
  70   1        else{
  71   2          Send(0x0a);
  72   2          Send(0x02);
  73   2          Send(0x0e);
  74   2        }
  75   1      }
  76          
  77          void send_volume(uchar vol_type){
  78   1        char vol_H, vol_L, vol;
  79   1        if(vol_type == 1) vol = vol_notification;
  80   1        else if(vol_type == 2) vol = vol_media;
  81   1        else if(vol_type == 3) vol = vol_alert;
  82   1        vol_H = vol / 10;
  83   1        vol_L = vol % 10;
  84   1        Send(0x0a);
  85   1        Send(vol_H);
  86   1        Send(vol_L);
  87   1        Send(0x0c);
  88   1      }
  89          
  90          void mp3_init(){
  91   1        set_notification_volume(20);
  92   1        send_volume(1);
  93   1        playmusic(20);
  94   1      }
  95          
  96          char get_notification_volume(){
  97   1        return vol_notification;
  98   1      }
  99          
 100          char get_media_volume(){
 101   1        return vol_media;
 102   1      }
 103          
 104          char get_alert_volume(){
 105   1        return vol_alert;
 106   1      }
 107          
 108          void set_notification_volume(char vol_temp){
 109   1        if(vol_temp > 30) vol_notification = 30;
 110   1        else if(vol_temp < 0) vol_notification = 0;
 111   1        else vol_notification = vol_temp;
 112   1      }
 113          
 114          void set_media_volume(char vol_temp){
 115   1        if(vol_temp > 30) vol_media = 30;
 116   1        else if(vol_temp < 0) vol_media = 0;
C51 COMPILER V9.60.7.0   MP3                                                               07/04/2024 19:58:39 PAGE 3   

 117   1        else vol_media = vol_temp;
 118   1      }
 119          
 120          void set_alert_volume(char vol_temp){
 121   1        if(vol_temp > 30) vol_alert = 30;
 122   1        else if(vol_temp < 0) vol_alert = 0;
 123   1        else vol_alert = vol_temp;
 124   1      }
 125          
 126          void page_music(){
 127   1        uchar selection = 1;
 128   1        char title_chinese[] = {2,3,66,67,68}, media_vol_chinese[] = {108,109,2,10}, cancel_chinese[] = {62,63}, 
             -next_chinese[] = {106,77,107};
 129   1        char music_playing[] = "Music1", vol_to_show[] = ":  ";
 130   1        OLED_Clear();
 131   1        send_volume(2);
 132   1        playmusic(1);
 133   1        OLED_ShowChineseString(24,0,0,title_chinese,5);
 134   1        OLED_ShowChineseString(20,4,0,media_vol_chinese,4);
 135   1        OLED_ShowChineseString(0,6,0,cancel_chinese,2);
 136   1        OLED_ShowChineseString(40,6,0,next_chinese,3);
 137   1        while(1){
 138   2          OLED_ShowString(40,2,music_playing,16);
 139   2          vol_to_show[2] = Char(get_media_volume() / 5);
 140   2          OLED_ShowString(84,4,vol_to_show,16);
 141   2          if(getKey() == 1){
 142   3            set_media_volume(get_media_volume() + 5);
 143   3            send_volume(2);
 144   3            vol_to_show[2] = Char(get_media_volume() / 5);
 145   3          }
 146   2          else if(getKey() == 2){
 147   3            set_media_volume(get_media_volume() - 5);
 148   3            send_volume(2);
 149   3            vol_to_show[2] = Char(get_media_volume() / 5);
 150   3          }
 151   2          else if(getKey() == 3){
 152   3            stopmusic();
 153   3            send_volume(1);
 154   3            OLED_Clear();
 155   3            break;
 156   3          }
 157   2          else if(getKey() == 4){
 158   3            stopmusic();
 159   3            selection++;
 160   3            if(selection >= 10) selection = 1;
 161   3            music_playing[5] = Char(selection);
 162   3            playmusic(selection);
 163   3          }
 164   2        }
 165   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    798    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =      4      34
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
